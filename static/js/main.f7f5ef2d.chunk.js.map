{"version":3,"sources":["actions/questions.js","actions/users.js","actions/authedUser.js","actions/loading.js","utils/_DATA.js","actions/shared.js","components/Poll.js","components/Dashboard.js","components/Nav.js","components/ProgressBar.js","components/AnsweredPoll.js","components/UnansweredPoll.js","components/NewPoll.js","components/LeaderBoard.js","components/Login.js","components/Questions.js","components/App.js","middleware/logger.js","middleware/index.js","reducers/index.js","reducers/users.js","reducers/questions.js","reducers/authedUser.js","reducers/loading.js","index.js"],"names":["RECEIVE_QUESTIONS","UPDATE_QUESTION_ANSWER","UPDATE_QUESTIONS","RECEIVE_USERS","UPDATE_USER_ANSWERS","UPDATE_USER_QUESTIONS","SET_AUTHED_USER","setAuthedUser","id","type","TOGGLE_LOADING","users","sarahedo","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","_ref2","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","handleInitialData","dispatch","showLoading","all","then","_ref","receiveUsers","receiveQuestion","hideLoading","handlePollAnswer","answer","getState","answerDetails","qid","_ref3","console","log","_saveQuestionAnswer","updateQuestionAnswers","updateUserAnswers","handleNewPoll","updateUserQuestions","updateQuestions","Poll","Component","render","questionAuthor","avatar","view","this","props","_jsxs","className","children","_jsx","src","alt","style","fontWeight","fontSize","Link","to","connect","Dashboard","constructor","arguments","state","viewAnswered","e","setState","viewUnanswered","answeredQuestions","unansweredQuestions","onClick","map","answeredQuestionsIds","Object","keys","unansweredQuestionsIds","includes","push","sort","a","b","Nav","handleLogout","history","NavLink","exact","activeClassName","withRouter","ProgressBar","completed","fillerStyles","height","width","backgroundColor","borderRadius","textAlign","alignSelf","padding","color","AnsweredPoll","undefined","completed1","completed2","totalVotes","optionOneVotes","optionTwoVotes","length","round","UnansweredPoll","handleSubmit","preventDefault","options","document","getElementsByName","i","checked","value","alert","onSubmit","htmlFor","NewPoll","handleOptionOneText","target","handleOptionTwoText","placeholder","onChange","LeaderBoard","leaderBoard","sortedLeaderBoard","user","Login","handleChange","submitChange","path","location","from","margin","defaultValue","disabled","hidden","Questions","match","params","App","React","componentDidMount","loading","Router","LoadingBar","Fragment","Route","Redirect","pathname","_ref4","_ref5","logger","store","next","action","group","dispatchResult","groupEnd","applyMiddleware","thunk","combineReducers","loadingBar","loadingBarReducer","createStore","reducer","middleware","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.f7f5ef2d.chunk.js","sourcesContent":["export const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\"\r\nexport const UPDATE_QUESTION_ANSWER = \"UPDATE_QUESTION_ANSWER\"\r\nexport const UPDATE_QUESTIONS = \"UPDATE_QUESTIONS\"\r\n\r\nexport function receiveQuestion(questions) {\r\n    return {\r\n        type : RECEIVE_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\n\r\nexport function updateQuestionAnswers (answerDetails){\r\n    return{\r\n        type : UPDATE_QUESTION_ANSWER,\r\n        answerDetails \r\n    }\r\n}\r\n\r\nexport function updateQuestions(formattedQuestion){\r\n    return{\r\n        type : UPDATE_QUESTIONS,\r\n        formattedQuestion\r\n    }\r\n}","export const RECEIVE_USERS = \"RECEIVE_USERS\"\r\nexport const UPDATE_USER_ANSWERS = \"UPDATE_USER_ANSWERS\"\r\nexport const UPDATE_USER_QUESTIONS = \"UPDATE_USER_QUESTIONS\"\r\n\r\nexport function receiveUsers (users){\r\n    return {\r\n        type : RECEIVE_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport function updateUserAnswers (answerDetails){\r\n    return {\r\n        type : UPDATE_USER_ANSWERS,\r\n        answerDetails\r\n    }\r\n}\r\n\r\nexport function updateUserQuestions(formattedQuestion){\r\n    return{\r\n        type : UPDATE_USER_QUESTIONS,\r\n        formattedQuestion\r\n    }\r\n}","export const SET_AUTHED_USER = \"SET_AUTHED_USER\"\r\n\r\nexport function setAuthedUser(id){\r\n    return{\r\n        type : SET_AUTHED_USER,\r\n        id\r\n    }\r\n}\r\n","export const TOGGLE_LOADING = 'TOGGLE_LOADING'\r\n\r\nexport function toggleLoading(){\r\n    return {\r\n        type : TOGGLE_LOADING\r\n    }\r\n}","let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [ 'sarahedo',],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe',],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe','sarahedo'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nexport function getInitialData (){\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions()\r\n  ]).then(([users,questions])=>({\r\n    users,\r\n    questions\r\n  }))\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      console.log(answer,qid,authedUser)\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","import { receiveQuestion, updateQuestionAnswers, updateQuestions } from \"./questions\";\r\nimport { receiveUsers, updateUserAnswers, updateUserQuestions } from \"./users\";\r\nimport { setAuthedUser } from \"./authedUser\";\r\nimport { toggleLoading } from \"./loading\";\r\nimport { getInitialData } from \"../utils/_DATA\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading\";\r\nimport {_saveQuestionAnswer, _saveQuestion} from \"../utils/_DATA\"\r\n\r\n\r\nconst AUTHED_ID = 'tylermcginnis'\r\n\r\nexport function handleInitialData(){\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return getInitialData()\r\n                .then(({users,questions})=>{\r\n                    dispatch(receiveUsers(users))\r\n                    dispatch(receiveQuestion(questions))\r\n                    // dispatch(setAuthedUser(id))\r\n                    dispatch(hideLoading())\r\n                    dispatch(toggleLoading())\r\n                })\r\n    }\r\n}\r\n\r\nexport function handlePollAnswer(answer, id){\r\n    return (dispatch, getState) =>{\r\n        const {authedUser} = getState()\r\n        const answerDetails = {\r\n            authedUser,\r\n            answer,\r\n            qid : id\r\n\r\n        }\r\n        dispatch(showLoading())\r\n        return _saveQuestionAnswer(answerDetails)\r\n                .then(()=>{\r\n                    dispatch(updateQuestionAnswers(answerDetails))\r\n                    dispatch(updateUserAnswers(answerDetails))\r\n                    dispatch(hideLoading())\r\n                })\r\n    }\r\n\r\n}\r\n\r\nexport function handleNewPoll(optionOneText, optionTwoText){\r\n    return (dispatch, getState) => {\r\n        const {authedUser} = getState()\r\n        const question = {\r\n            optionOneText,\r\n            optionTwoText,\r\n            author : authedUser\r\n        }\r\n        return _saveQuestion(question)\r\n                .then((formattedQuestion)=>{\r\n                    dispatch(showLoading())\r\n                    dispatch(updateUserQuestions(formattedQuestion))\r\n                    dispatch(updateQuestions(formattedQuestion))\r\n                    dispatch(hideLoading())\r\n                })\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Poll extends Component{\r\n    render(){\r\n        const {questionAuthor, avatar, optionOne, optionTwo, id, view} = this.props\r\n        return(\r\n            <div className = \"poll-container\">\r\n                <p className = \"poll-heading\"><span>{questionAuthor}</span> asks :</p>\r\n                <div className = \"poll-details\">\r\n                    <img\r\n                        src = {avatar}\r\n                        alt = {`avatar of ${questionAuthor}`}\r\n                        className = \"avatar\"\r\n                    />\r\n                    <div className = \"poll-data \">\r\n                        <p className = \"\" style = {{fontWeight : 'bolder', fontSize : '20px'}}>Would You Rather</p>\r\n                        <p className = \"poll-option \">{optionOne}</p>\r\n                        <p className = \"poll-option \">{optionTwo}</p>\r\n                        <p className = \"poll-view\">\r\n                            <Link \r\n                                to = {`/questions/${id}`}\r\n                                className = \"poll-link\">View Poll\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({users, questions, authedUser},{id, view}){\r\n    const questionAuthor = questions[id].author\r\n    const avatar = users[questionAuthor].avatarURL\r\n    const optionOne = questions[id].optionOne.text\r\n    const optionTwo = questions[id].optionTwo.text\r\n    return{\r\n        questionAuthor,\r\n        avatar,\r\n        optionOne,\r\n        optionTwo,\r\n        view,\r\n        id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Poll)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Poll from './Poll'\r\n\r\nclass Dashboard extends Component{\r\n    state = {\r\n        view : 'unanswered'\r\n    }\r\n    viewAnswered = (e) =>{\r\n        this.setState(()=>({\r\n            view : 'answered'\r\n        }))\r\n    }\r\n    viewUnanswered = (e) =>{\r\n        this.setState(()=>({\r\n            view : 'unanswered'\r\n        }))\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        const {view} = this.state\r\n        const {answeredQuestions, unansweredQuestions} = this.props\r\n        return(\r\n            <div className = \"dashboard-container\">\r\n                <div className = \"dashboard-buttons\">\r\n                    <p className = {view === 'unanswered'?\"questions-view-active\":\"questions-view\" } onClick = {this.viewUnanswered}>Unanswered Questions</p>\r\n                    <p className = {view === 'answered'?\"questions-view-active\":\"questions-view\" } onClick = {this.viewAnswered}>Answered Questions</p>\r\n                </div>\r\n                {view === 'answered'\r\n                ? answeredQuestions.map(id=>(\r\n                    <li key = {id}>\r\n                        <Poll view = {view} id = {id}/>\r\n                    </li>\r\n                  ))\r\n                : unansweredQuestions.map(id=>(\r\n                    <li key = {id}>\r\n                        <Poll view = {view} id = {id}/>\r\n                    </li>\r\n                  ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({questions, users ,authedUser}){\r\n    const answeredQuestions = users[authedUser].answers\r\n    console.log(users[authedUser].answers)\r\n    const answeredQuestionsIds = Object.keys(answeredQuestions)\r\n    console.log(answeredQuestionsIds)\r\n    const unansweredQuestionsIds = []\r\n    Object.keys(questions).map((id)=>{\r\n        if(!answeredQuestionsIds.includes(id)){\r\n            unansweredQuestionsIds.push(id)\r\n        }\r\n    })\r\n    return {\r\n        answeredQuestions : answeredQuestionsIds.sort((a,b)=> questions[b].timestamp - questions[a].timestamp ),\r\n        unansweredQuestions : unansweredQuestionsIds.sort((a,b)=> questions[b].timestamp - questions[a].timestamp )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, {Component} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setAuthedUser } from '../actions/authedUser'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n\r\nclass Nav extends Component{\r\n    handleLogout = () => {\r\n        this.props.dispatch(setAuthedUser(null))\r\n        this.props.history.push('/login')\r\n    }\r\n    render(){\r\n        return(\r\n            <nav className = \"nav\">\r\n                <div>\r\n                    <ul className = \"nav-list\">\r\n                        <li>\r\n                            <NavLink to = '/' exact activeClassName = \"active\">\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to = '/add' activeClassName = \"active\">\r\n                                New Question\r\n                            </NavLink>  \r\n                        </li>\r\n                        <li>\r\n                            <NavLink to = '/leaderboard' activeClassName = \"active\">\r\n                                Leader Board\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {this.props.authedUser !== null && (\r\n                    <div>\r\n                    <ul className = \"nav-list\">\r\n                        <li className = \"nav-greating\">\r\n                            <span> Hello, {this.props.authedUser}</span>\r\n                            <img\r\n                                src = {this.props.avatar}\r\n                                alt = {`avatar of ${this.props.authedUser}`}\r\n                                className = \"avatar-thumb\"\r\n                            />\r\n                        </li>\r\n                        <li onClick = {this.handleLogout} className = \"logout\">Logout</li>\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({users,authedUser}){\r\n    console.log(authedUser)\r\n    const avatar = authedUser ? users[authedUser].avatarURL : null\r\n    console.log(avatar)\r\n    return{\r\n        authedUser,\r\n        avatar\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Nav))","const ProgressBar = (props) => {\r\n    const { completed } = props;\r\n  \r\n    const containerStyles = {\r\n      height: 20,\r\n      width: '75%',\r\n      backgroundColor: \"#e0e0de\" ,\r\n      borderRadius: 50,\r\n      alignSelf : 'center'\r\n    }\r\n  \r\n    const fillerStyles = {\r\n      height: '100%',\r\n      width: `${completed}%`,\r\n      backgroundColor: \"#0f5c26\",\r\n      borderRadius: 'inherit',\r\n      textAlign: 'right'\r\n    }\r\n  \r\n    const labelStyles = {\r\n      padding: 5,\r\n      color: 'white',\r\n      fontWeight: 'bold'\r\n    }\r\n  \r\n    return (\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}>\r\n          <span style={labelStyles}>{`${completed}%`}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProgressBar;","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProgressBar from './ProgressBar'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass AnsweredPoll extends Component{\r\n    render(){\r\n        const {question} = this.props\r\n        if(question === undefined){\r\n            return(\r\n                <p>This Poll is not Existed</p>\r\n            )\r\n        }\r\n        else{\r\n            const {questionAuthor, avatar, optionOne, optionTwo, completed1, completed2, \r\n                    authedUser,totalVotes, optionOneVotes, optionTwoVotes} = this.props\r\n            console.log(completed1,completed2)\r\n            \r\n            return(\r\n                <div className = \"answered-poll-container\">\r\n                    <p className = \"poll-heading\"><span>{questionAuthor}</span> asks :</p>\r\n                    <div className = \"poll-details\">\r\n                        <img\r\n                            src = {avatar}\r\n                            alt = {`avatar of ${questionAuthor}`}\r\n                            className = \"avatar-answered\"\r\n                        />\r\n                        <div className = \"poll-data \">\r\n                            <p className = \"\" style = {{fontWeight : 'bolder', fontSize : '20px'}}>Results :-</p>\r\n                            <div \r\n                                className = {question.optionOne.votes.includes(authedUser) \r\n                                            ? \"answer-yes\"\r\n                                            : \"answer-no\"\r\n                                            }\r\n                            >\r\n                                <div className = \"poll-data1\">\r\n                                    <p className = \"poll-option \">{optionOne}</p>\r\n                                    {question.optionOne.votes.includes(authedUser) && (\r\n                                    <p className = \"your-vote\">Your Vote</p>\r\n                                    )}\r\n                                </div>\r\n                                <ProgressBar completed = {completed1}/>\r\n                                <div className = \"votes\"><p>{optionOneVotes} out of {totalVotes} votes</p></div>\r\n                            </div>\r\n                            <div\r\n                                className = {question.optionTwo.votes.includes(authedUser) \r\n                                            ? \"answer-yes\" \r\n                                            : \"answer-no\"\r\n                                            }\r\n                            >\r\n                                <div className = \"poll-data1\">\r\n                                    <p className = \"poll-option \">{optionTwo}</p>\r\n                                    {question.optionTwo.votes.includes(authedUser) && (\r\n                                    <p className = \"your-vote\">Your Vote</p>\r\n                                    )}\r\n                                </div>\r\n                                <ProgressBar completed = {completed2}/>\r\n                                <div className = \"votes\"><p>{optionTwoVotes} out of {totalVotes} votes</p></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authedUser,users,questions},props){\r\n    const {id} = props\r\n    const question = questions[id]\r\n    console.log(question)\r\n    if(question !== undefined){\r\n        const questionAuthor = questions[id].author\r\n        const avatar = users[questionAuthor].avatarURL\r\n        const optionOne = questions[id].optionOne.text\r\n        const optionTwo = questions[id].optionTwo.text\r\n        const totalVotes = questions[id].optionOne.votes.length + questions[id].optionTwo.votes.length\r\n        const optionOneVotes = questions[id].optionOne.votes.length\r\n        const optionTwoVotes =  questions[id].optionTwo.votes.length\r\n        const completed1 = Math.round(( optionOneVotes / totalVotes) * 100)\r\n        const completed2 = Math.round(( optionTwoVotes / totalVotes) * 100)\r\n        return{\r\n            questionAuthor,\r\n            question,\r\n            avatar,\r\n            optionOne,\r\n            optionTwo,\r\n            completed1,\r\n            completed2,\r\n            id,\r\n            authedUser,\r\n            totalVotes,\r\n            optionOneVotes,\r\n            optionTwoVotes\r\n        }\r\n    }\r\n    return {\r\n        question\r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AnsweredPoll))","import React,{Component} from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport { handlePollAnswer } from '../actions/shared'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass UnansweredPoll extends Component{\r\n    state = {\r\n        answer : null\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        let answer = null\r\n        const {dispatch , id} = this.props\r\n        const options = document.getElementsByName('answer')\r\n        console.log(options)\r\n        for(let i = 0; i <options.length; i++ ){\r\n            if(options[i].checked){\r\n                console.log(options[i])\r\n                answer = options[i].value\r\n            }\r\n        }\r\n        if (answer !== null){\r\n            dispatch(handlePollAnswer(answer, id))\r\n            this.props.history.push(`/questions/${id}`)\r\n        }\r\n        else{\r\n            alert('please choose answer')\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.answer)\r\n        const {question} = this.props\r\n        if(question === undefined){\r\n            return(\r\n                <p>This Poll is not Existed</p>\r\n            )\r\n        }\r\n        else{\r\n            const {questionAuthor, avatar, optionOne, optionTwo, authedUser} = this.props\r\n            \r\n            return(\r\n                <div className = \"unanswered-poll-container\">\r\n                    <p className = \"poll-heading\"><span>{questionAuthor}</span> asks :</p>\r\n                    <div className = \"poll-details\">\r\n                        <img\r\n                            src = {avatar}\r\n                            alt = {`avatar of ${questionAuthor}`}\r\n                            className = \"avatar-answered\"\r\n                        />\r\n                        <div className = \"poll-data \">\r\n                          <h3>Would You Rather</h3>\r\n                          <form className = \"form\" onSubmit = {this.handleSubmit}>\r\n                            <input type=\"radio\" id=\"radio\" name=\"answer\" value=\"optionOne\"/>\r\n                              <label htmlFor =\"option-one\">{optionOne}</label><br/>\r\n                            <input type=\"radio\" id=\"radio\" name=\"answer\" value=\"optionTwo\"/>\r\n                              <label htmlFor =\"option-two\">{optionTwo}</label><br/><br/>\r\n                            <input type=\"submit\" value=\"Submit\"></input>\r\n                          </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({questions,users,authedUser},props){\r\n    const {id} = props\r\n    const question = questions[id]\r\n    if ( question !== undefined){\r\n        const questionAuthor = questions[id].author\r\n        const avatar = users[questionAuthor].avatarURL\r\n        const optionOne = questions[id].optionOne.text\r\n        const optionTwo = questions[id].optionTwo.text\r\n        return {\r\n            question,\r\n            questionAuthor,\r\n            avatar,\r\n            optionOne,\r\n            optionTwo,\r\n            authedUser,\r\n            id\r\n        }\r\n    }\r\n    return {\r\n        question\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(UnansweredPoll))","import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {handleNewPoll} from '../actions/shared'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass NewPoll extends Component{\r\n    state = {\r\n        optionOneText : \"\",\r\n        optionTwoText : \"\"\r\n    }\r\n    handleOptionOneText = (e)=>{\r\n        e.preventDefault()\r\n        const text = e.target.value\r\n        this.setState(()=>({\r\n            optionOneText : text\r\n        }))\r\n    }\r\n    handleOptionTwoText = (e)=>{\r\n        e.preventDefault()\r\n        const text = e.target.value\r\n        this.setState(()=>({\r\n            optionTwoText : text\r\n        }))\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        const {dispatch} = this.props\r\n        const {optionOneText, optionTwoText} = this.state\r\n        if (optionOneText !== \"\" && optionTwoText !== \"\"){\r\n            dispatch(handleNewPoll(optionOneText,optionTwoText))\r\n            this.props.history.push('/')\r\n        }\r\n        else{\r\n            alert('Please Enter Your Options')\r\n        }\r\n    }\r\n    render(){\r\n        const {optionOneText, optionTwoText} = this.state\r\n        return(\r\n            <div className = \"new-poll-container\">\r\n                <h2 className = \"new-poll-header\">Create New Question</h2>\r\n                <p>Complete the question: </p>\r\n                <h3>Would You Rather...</h3>\r\n                <form className = \"new-poll-form\" onSubmit = {this.handleSubmit}>\r\n                    <input type = \"text\" \r\n                        placeholder = \"Enter Option One Text Here\" \r\n                        className = \"option-input\"\r\n                        value = {optionOneText}\r\n                        onChange = {this.handleOptionOneText}\r\n                        >    \r\n                    </input>\r\n                    <p className = \"center\">OR</p>\r\n                    <input type = \"text\" \r\n                        placeholder = \"Enter Option Two Text Here\" \r\n                        className = \"option-input\"\r\n                        value = {optionTwoText}\r\n                        onChange = {this.handleOptionTwoText}\r\n                        >    \r\n                    </input>\r\n                    <br/><br/>\r\n                    <input type = \"submit\" value = \"Submit \" className = \"center\"></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(){\r\n    return{\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(NewPoll))","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass LeaderBoard extends Component{\r\n    \r\n    render(){\r\n        const {leaderBoard, sortedLeaderBoard, users} = this.props\r\n        return(\r\n            <div className = \"leader-board-container\">\r\n                {sortedLeaderBoard.map((user,i)=>(\r\n                    <li key = {user}>\r\n                        <div className = \"user-container\">\r\n                            <h2 className = \"leader-board-header\">{i+1}</h2>\r\n                            <div className = \"user-details-container\">\r\n                                <div>\r\n                                    <img\r\n                                        src = {users[user].avatarURL}\r\n                                        alt = {`avatar of ${user}`}\r\n                                        className = \"avatar\"\r\n                                    />\r\n                                </div>\r\n                                <div className = \"user-counts\">\r\n                                    <h2>{users[user].id}</h2>\r\n                                    <div className = \"count\">\r\n                                        <p>Answered questions</p>\r\n                                        <p>{leaderBoard[user].answers}</p>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className = \"count\">\r\n                                        <p>Created questions</p>\r\n                                        <p>{leaderBoard[user].questions}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className = \"center user-score\">\r\n                                        <h1>score</h1>\r\n                                        <h4>{leaderBoard[user].questions+leaderBoard[user].answers}</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({users, authedUser}){\r\n    // console.log(Object.keys(users))\r\n    // console.log(Object.keys(users[authedUser].answers).length)\r\n    let leaderBoard = {}\r\n    Object.keys(users).map((user)=>{\r\n      leaderBoard = {\r\n          ...leaderBoard,\r\n          [user] :{\r\n              id : user,\r\n              answers : Object.keys(users[user].answers).length,\r\n              questions : users[user].questions.length\r\n          }\r\n      }\r\n    })\r\n\r\n    const sortedLeaderBoard = Object.keys(leaderBoard)\r\n            .sort((a,b)=> (leaderBoard[b].answers + leaderBoard[b].questions) - (leaderBoard[a].answers + leaderBoard[a].questions))\r\n    // const LeaderBoard = Object.keys(users)\r\n    //     .sort((a,b)=> (Object.keys(users[b].answers).length + users[b].questions.length) - (Object.keys(users[a].answers).length + users[a].questions.length))\r\n    console.log(leaderBoard)\r\n    console.log(sortedLeaderBoard)\r\n    return {\r\n        leaderBoard,\r\n        sortedLeaderBoard,\r\n        users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard)","import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {setAuthedUser} from '../actions/authedUser'\r\nimport { Redirect,withRouter } from 'react-router-dom'\r\n\r\nclass Login extends Component{\r\n\r\n    state =  {\r\n        value : \"\",\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState(()=>({\r\n            value : e.target.value\r\n        }))\r\n    }\r\n    submitChange = () => {\r\n        if(this.state.value !== \"\"){\r\n            let path = '/'\r\n            this.props.dispatch(setAuthedUser(this.state.value))\r\n            if(this.props.location.state){\r\n                path = this.props.location.state.from\r\n            }\r\n            console.log(path)\r\n            this.props.history.push(path)\r\n        }else{\r\n            alert('Please select User to login')\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        if(this.props.authedUser !== null){\r\n            return <div className = \"center\">You are logged in</div>\r\n        }\r\n        return(\r\n            <div className = \"unanswered-poll-container\">\r\n                    <div className = \"login-heading\">\r\n                        <h2 style = {{margin : '10px'}} >Welcome To The Would You Rather App!</h2>\r\n                        <h4 style = {{margin : '5px'}}>Please sign in to continue</h4>\r\n                    </div>\r\n                    <div className = \"login-details\">\r\n                        <p className = \"sign-in\">Sign in</p>\r\n                        <select value = {this.state.value}\r\n                        onChange = {this.handleChange}\r\n                        placeholder = 'select user'\r\n                        className = \"login-select\">\r\n                            <option value=\"\" defaultValue disabled hidden>Select User</option>\r\n                            <option value=\"sarahedo\" >Sarah Edo</option>\r\n                            <option value=\"tylermcginnis\">Tyler Mcginnis</option>\r\n                            <option value=\"johndoe\">John Doe</option>\r\n                        </select>\r\n                        <button className = \"login-button\" type = \"submit\" onClick = {this.submitChange}>Log In</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({users, authedUser}){\r\n    return{\r\n        users,\r\n        authedUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login))","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AnsweredPoll from './AnsweredPoll'\r\nimport UnansweredPoll from './UnansweredPoll'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Questions extends Component{\r\n    render(){\r\n        const {answeredQuestionsIds, unansweredQuestionsIds, id} = this.props\r\n        return(\r\n            <div>\r\n                {answeredQuestionsIds.includes(id)\r\n                ?<AnsweredPoll id = {id}/>\r\n                :<UnansweredPoll id = {id}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, questions, users},props){\r\n    const {id} = props.match.params\r\n    const answeredQuestions = users[authedUser].answers\r\n    console.log(users[authedUser].answers)\r\n    const answeredQuestionsIds = Object.keys(answeredQuestions)\r\n    console.log(answeredQuestionsIds)\r\n    const unansweredQuestionsIds = []\r\n    Object.keys(questions).map((id)=>{\r\n        if(!answeredQuestionsIds.includes(id)){\r\n            unansweredQuestionsIds.push(id)\r\n        }\r\n    })\r\n    return{\r\n        answeredQuestionsIds,\r\n        unansweredQuestionsIds,\r\n        id\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Questions))","import { connect } from 'react-redux'\r\nimport React from 'react';\r\nimport {handleInitialData} from '../actions/shared'\r\nimport {Fragment} from 'react'\r\nimport LoadingBar from 'react-redux-loading';\r\nimport Dashboard from './Dashboard';\r\nimport Nav from './Nav';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport AnsweredPoll from './AnsweredPoll';\r\nimport UnansweredPoll from './UnansweredPoll';\r\nimport NewPoll from './NewPoll'\r\nimport LeaderBoard from './LeaderBoard';\r\nimport Login from './Login';\r\nimport {Redirect} from 'react-router-dom'\r\nimport Questions from './Questions'\r\n\r\nclass App extends React.Component{\r\n\r\n  componentDidMount(){\r\n    this.props.dispatch(handleInitialData())\r\n    console.log('mounted')\r\n  }\r\n\r\n  render(){\r\n    const {loading, authedUser} = this.props\r\n    console.log(loading)\r\n    return(\r\n      <Router>\r\n          <LoadingBar/>\r\n            {loading === true \r\n            ? null \r\n            : <Fragment> \r\n                <div className = \"container\">\r\n                    <Nav/>\r\n                    <Route path = \"/\" exact render = {() => {\r\n                      return authedUser !== null\r\n                              ? <Dashboard/>\r\n                              : <Redirect to = '/login'/>\r\n                    }}/>\r\n                    <Route path = \"/questions/:id\" render = {({location}) => {\r\n                      return authedUser !== null\r\n                              ? <Questions/>\r\n                              : <Redirect to = {{\r\n                                pathname : '/login',\r\n                                state : { from : location.pathname}\r\n                              }}/>\r\n                    }}/>\r\n                    <Route path = \"/add\" render = {({location}) => {\r\n                      return authedUser !== null\r\n                              ? <NewPoll/>\r\n                              : <Redirect to = {{\r\n                                pathname : '/login',\r\n                                state : { from : location.pathname}\r\n                              }}/>\r\n                    }}/>\r\n                    <Route path = \"/leaderboard\" render = {({location}) => {\r\n                      return authedUser !== null\r\n                              ? <LeaderBoard/>\r\n                              : <Redirect to = {{\r\n                                pathname : '/login',\r\n                                state : { from : location.pathname}\r\n                              }}/>\r\n                    }}/>\r\n                    <Route path = \"/login\" render = {({location}) => (\r\n                      <Login/>\r\n                      )} />\r\n                </div>\r\n              </Fragment>\r\n            }\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps({loading,authedUser}){\r\n  return{\r\n    loading,\r\n    authedUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const logger = (store) => (next) => (action) =>{\r\n    console.group(action.type)\r\n        console.log('Action ', action)\r\n        const dispatchResult = next(action)\r\n        console.log('The New State: ', store.getState())\r\n    console.groupEnd()\r\n    return dispatchResult\r\n}\r\n\r\nexport default logger\r\n","import  logger  from './logger'\r\nimport  thunk  from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n)","import users from \"./users\";\r\nimport questions from \"./questions\";\r\nimport authedUser from \"./authedUser\";\r\nimport { loadingBarReducer } from \"react-redux-loading\";\r\nimport { combineReducers } from \"redux\";\r\nimport loading from \"./loading\";\r\n\r\nexport default combineReducers({\r\n    users,\r\n    questions,\r\n    authedUser,\r\n    loading,\r\n    loadingBar : loadingBarReducer\r\n})","import { RECEIVE_USERS, UPDATE_USER_ANSWERS, UPDATE_USER_QUESTIONS } from \"../actions/users\";\r\n\r\nexport default function users(state = {}, action){\r\n    switch(action.type){\r\n        case RECEIVE_USERS :\r\n            return {\r\n                    ...state,\r\n                    ...action.users\r\n            }\r\n        case UPDATE_USER_ANSWERS:\r\n            const {qid, answer, authedUser} = action.answerDetails\r\n            return{\r\n                ...state,\r\n                [authedUser]:{\r\n                    ...state[authedUser],\r\n                    answers :{\r\n                        ...state[authedUser].answers,\r\n                        [qid] : answer\r\n                    }\r\n                }\r\n            }\r\n        case UPDATE_USER_QUESTIONS:\r\n            const {author} = action.formattedQuestion\r\n            return{\r\n                ...state,\r\n                [author] : {\r\n                    ...state[author],\r\n                    questions: state[author].questions.concat([action.formattedQuestion.id])\r\n                }\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import { RECEIVE_QUESTIONS, UPDATE_QUESTION_ANSWER, UPDATE_QUESTIONS} from \"../actions/questions\";\r\n\r\nexport default function questions(state = {}, action){\r\n    switch(action.type){\r\n        case RECEIVE_QUESTIONS:\r\n            return{\r\n                ...state,\r\n                ...action.questions\r\n            }\r\n        case UPDATE_QUESTION_ANSWER:\r\n            const {qid , answer, authedUser} = action.answerDetails\r\n            return{\r\n                ...state,\r\n                [qid]: {\r\n                  ...state[qid],\r\n                  [answer]: {\r\n                    ...state[qid][answer],\r\n                    votes: state[qid][answer].votes.concat([authedUser])\r\n                  }\r\n                }\r\n              }\r\n        case UPDATE_QUESTIONS:\r\n            const {formattedQuestion} = action\r\n            return{\r\n                ...state,\r\n                [formattedQuestion.id] : formattedQuestion\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import { SET_AUTHED_USER } from \"../actions/authedUser\";\r\n\r\nexport default function authedUser(state = null, action){\r\n    switch(action.type){\r\n        case SET_AUTHED_USER:\r\n            return action.id\r\n        default:\r\n            return state\r\n    }\r\n}","import { TOGGLE_LOADING } from \"../actions/loading\";\r\n\r\nexport default function loading(state = true, action){\r\n    switch(action.type){\r\n        case TOGGLE_LOADING :\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport middleware from './middleware'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer,middleware)\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}